<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cultures" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="ExcelFileFilter" xml:space="preserve">
    <value>Excel-Document|*.xlsx</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExportToExcel" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="ExportToExcelDiff" xml:space="preserve">
    <value>Export to Excel (missing entries only)</value>
  </data>
  <data name="ImportFromExcel" xml:space="preserve">
    <value>Import from Excel</value>
  </data>
  <data name="LoadingSolution" xml:space="preserve">
    <value>Loading solution</value>
  </data>
  <data name="NotExistingInLanguage" xml:space="preserve">
    <value>{0} entries which don`t exist in '{1}'</value>
  </data>
  <data name="OpenSolution" xml:space="preserve">
    <value>Open solution</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="ProjectUnknownException" xml:space="preserve">
    <value>The project '{0}' does not exist in this solution.</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="SaveResources" xml:space="preserve">
    <value>Save resource files</value>
  </data>
  <data name="SavingResourceFiles" xml:space="preserve">
    <value>Saving resource files</value>
  </data>
  <data name="SavingResourceFilesCompleted" xml:space="preserve">
    <value>Resource files saved</value>
  </data>
  <data name="SetCulture" xml:space="preserve">
    <value>Choose language</value>
  </data>
  <data name="VSSolutionFileFilter" xml:space="preserve">
    <value>Visual-Studio Solution|*.sln</value>
    <comment>Qu</comment>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="ClientTitle" xml:space="preserve">
    <value>RESX Manager</value>
  </data>
  <data name="StoringTranslations" xml:space="preserve">
    <value>Storing translations</value>
  </data>
  <data name="StoringTranslationsCompleted" xml:space="preserve">
    <value>Storing translations completed</value>
  </data>
  <data name="StoreAllTranslations" xml:space="preserve">
    <value>Store all translations to database</value>
  </data>
  <data name="CloseSolution" xml:space="preserve">
    <value>Close solution</value>
  </data>
  <data name="ExcelImportFileFilter" xml:space="preserve">
    <value>Excel-Document (*.xls,*.xlsx)|*.xls;*.xlsx</value>
  </data>
  <data name="SearchingTranslations" xml:space="preserve">
    <value>Searching translations in database</value>
  </data>
  <data name="SerachingTranslationsProcess" xml:space="preserve">
    <value>Searching translations in database ({0}/{1})</value>
  </data>
  <data name="SearchingTranslationsResult" xml:space="preserve">
    <value>{0} texts translated.</value>
  </data>
  <data name="SetupDatabase" xml:space="preserve">
    <value>Configure database</value>
  </data>
  <data name="TestConnectionSuccess" xml:space="preserve">
    <value>Successfully connected to database.</value>
  </data>
  <data name="CreatedDatabaseSuccess" xml:space="preserve">
    <value>Database successfully created.</value>
  </data>
  <data name="DatabaseNotExists" xml:space="preserve">
    <value>Database does not exist.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ExportComments" xml:space="preserve">
    <value>Export comments</value>
  </data>
  <data name="ExportDiff" xml:space="preserve">
    <value>Export missing entries only</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorTextDefault" xml:space="preserve">
    <value>An error has been occurred. {0} Please see error.txt for details.</value>
  </data>
  <data name="Documentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Translate" xml:space="preserve">
    <value>Translate</value>
  </data>
  <data name="TranslateToolTip" xml:space="preserve">
    <value>Translates missing texts by using already translated texts in a database. For details see ? -&gt; Documentation.</value>
  </data>
  <data name="ChangingCulture" xml:space="preserve">
    <value>Applying change</value>
  </data>
  <data name="ChangingCultureCompleted" xml:space="preserve">
    <value>Changing culture completed</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="HelpSetupDatabase" xml:space="preserve">
    <value>For further information click here</value>
  </data>
  <data name="CreateDatabase" xml:space="preserve">
    <value>Configure database</value>
  </data>
  <data name="TestConnection" xml:space="preserve">
    <value>Test connection</value>
  </data>
  <data name="TranslateAuto" xml:space="preserve">
    <value>Auto translate</value>
  </data>
  <data name="Translations" xml:space="preserve">
    <value>Translations</value>
  </data>
  <data name="SaveChangesQuestion" xml:space="preserve">
    <value>Resource files have been changed. Save changes to files?</value>
  </data>
  <data name="SaveChangesTitle" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="DataBaseNotConfigured" xml:space="preserve">
    <value>Database does not seem to be configured. Please check configuration.</value>
  </data>
  <data name="IncludeProjectsWithoutTranslations" xml:space="preserve">
    <value>Include projects without translations</value>
  </data>
  <data name="AutoAdjustLayout" xml:space="preserve">
    <value>Adjust layout</value>
  </data>
  <data name="ExportFileGroup" xml:space="preserve">
    <value>Export file group to Excel</value>
  </data>
  <data name="ExportProjectToExcel" xml:space="preserve">
    <value>Export project to Excel</value>
  </data>
  <data name="ExportCulturePair" xml:space="preserve">
    <value>Export cultures to Excel</value>
  </data>
  <data name="ExportCulture" xml:space="preserve">
    <value>Export culture to Excel</value>
  </data>
  <data name="WarningNoCultures" xml:space="preserve">
    <value>The solution '{0}' does not contain any culture. Have you loaded the correct file?</value>
  </data>
  <data name="WarningNoProjects" xml:space="preserve">
    <value>The solution '{0}' does not contain any project. Have you loaded the correct file?</value>
  </data>
  <data name="WarningOpenSolutionTitle" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="IgnoreInternalResources" xml:space="preserve">
    <value>Ignore WinForms internal resources ("&gt;&gt;")</value>
  </data>
  <data name="SaveResources_TryCheckout_Message" xml:space="preserve">
    <value>Some files are readonly and appear to are checked into TFS, would you like to try and checkout files?</value>
  </data>
  <data name="SaveResources_TryCheckout_Title" xml:space="preserve">
    <value>Checkout readonly files?</value>
  </data>
  <data name="SaveResources_TryCheckin_Message" xml:space="preserve">
    <value>The files have been saved. Would you like to check in the files you have previously checked out?</value>
  </data>
  <data name="SaveResources_TryCheckin_Title" xml:space="preserve">
    <value>Check in files?</value>
  </data>
  <data name="TFSException" xml:space="preserve">
    <value>Error while calling Team Foundation server. {0}</value>
  </data>
  <data name="ImportingResources" xml:space="preserve">
    <value>Importing Resources</value>
  </data>
  <data name="ImportingResourcesCompleted" xml:space="preserve">
    <value>{0} resource entries imported</value>
  </data>
  <data name="ExcelExportTitle" xml:space="preserve">
    <value>Export Resources to Excel</value>
  </data>
</root>